from easydict import EasyDict as edict

config = edict()
config.sh_file_path = '/home/wangli/ASGSR/attack/ensembleattackjob.sh'
config.adv_sample_root = '/mntcephfs/lab_data/wangli/ASGSR/ensemble'

config.attack = edict()
config.attack.until_all_success = True
# config.attack.names = ['PGD_XVector', 'PGD_ResNetSE34V2', 'PGD_ECAPATDNN', 'PGD_RawNet3']
config.attack.names = ['PGD_XVector', 'PGD_ResNetSE34V2', 'PGD_ECAPATDNN', 'PGD_RawNet3']
config.attack.mark = 'Step20'

config.attack.PGD_XVector = edict()
config.attack.PGD_XVector.model = edict()
config.attack.PGD_XVector.model.name = 'XVector'
config.attack.PGD_XVector.model.save_path = '/home/wangli/ASGSR/voxceleb_trainer/exps/XVector_AAM/model/model000000230.model'
config.attack.PGD_XVector.model.config_path = '/home/wangli/ASGSR/voxceleb_trainer/configs/XVector_AAM.yaml'
config.attack.PGD_XVector.model.threshold = 0.28011
config.attack.PGD_XVector.attack = edict()
config.attack.PGD_XVector.attack.name = 'PGD'
config.attack.PGD_XVector.attack.config = edict()
config.attack.PGD_XVector.attack.config.eps = 0.008
config.attack.PGD_XVector.attack.config.alpha = 0.0004
config.attack.PGD_XVector.attack.config.steps = 20
config.attack.PGD_XVector.attack.config.random_start = True
config.attack.PGD_XVector.attack.config.until_success = False
config.attack.PGD_XVector.attack.config.loss_function = edict()
config.attack.PGD_XVector.attack.config.loss_function.name = 'threshold_loss'
config.attack.PGD_XVector.attack.config.loss_function.threshold_loss = edict()
config.attack.PGD_XVector.attack.config.score_function = edict()
config.attack.PGD_XVector.attack.config.score_function.name = 'cosine_similarity_score'
config.attack.PGD_XVector.attack.config.score_function.cosine_similarity_score = edict()
config.attack.PGD_XVector.attack.config.decision_function = edict()
config.attack.PGD_XVector.attack.config.decision_function.name = 'cosine_similarity_decision'
config.attack.PGD_XVector.attack.config.decision_function.cosine_similarity_decision = edict()

config.attack.PGD_ResNetSE34V2 = edict()
config.attack.PGD_ResNetSE34V2.model = edict()
config.attack.PGD_ResNetSE34V2.model.name = 'ResNetSE34V2'
config.attack.PGD_ResNetSE34V2.model.save_path = '/home/wangli/ASGSR/pretrained_models/ResNetSE34V2/ResNetSE34V2.model'
config.attack.PGD_ResNetSE34V2.model.config_path = '/home/wangli/ASGSR/voxceleb_trainer/configs/ResNetSE34V2.yaml'
config.attack.PGD_ResNetSE34V2.model.threshold = 0.3347
config.attack.PGD_ResNetSE34V2.attack = edict()
config.attack.PGD_ResNetSE34V2.attack.name = 'PGD'
config.attack.PGD_ResNetSE34V2.attack.config = edict()
config.attack.PGD_ResNetSE34V2.attack.config.eps = 0.008
config.attack.PGD_ResNetSE34V2.attack.config.alpha = 0.0004
config.attack.PGD_ResNetSE34V2.attack.config.steps = 20
config.attack.PGD_ResNetSE34V2.attack.config.random_start = True
config.attack.PGD_ResNetSE34V2.attack.config.until_success = False
config.attack.PGD_ResNetSE34V2.attack.config.loss_function = edict()
config.attack.PGD_ResNetSE34V2.attack.config.loss_function.name = 'threshold_loss'
config.attack.PGD_ResNetSE34V2.attack.config.loss_function.threshold_loss = edict()
config.attack.PGD_ResNetSE34V2.attack.config.score_function = edict()
config.attack.PGD_ResNetSE34V2.attack.config.score_function.name = 'cosine_similarity_score'
config.attack.PGD_ResNetSE34V2.attack.config.score_function.cosine_similarity_score = edict()
config.attack.PGD_ResNetSE34V2.attack.config.decision_function = edict()
config.attack.PGD_ResNetSE34V2.attack.config.decision_function.name = 'cosine_similarity_decision'
config.attack.PGD_ResNetSE34V2.attack.config.decision_function.cosine_similarity_decision = edict()

config.attack.PGD_ECAPATDNN = edict()
config.attack.PGD_ECAPATDNN.model = edict()
config.attack.PGD_ECAPATDNN.model.name = 'ECAPATDNN'
config.attack.PGD_ECAPATDNN.model.save_path = '/mnt/data3/hehaorui/ckpt/ECAPATDNN/ECAPATDNN.pth'
config.attack.PGD_ECAPATDNN.model.config_path = '/home/hehaorui/code/Amphion/ASGSR/voxceleb_trainer/configs/ECAPATDNN.yaml'
config.attack.PGD_ECAPATDNN.model.threshold = 0.27144
config.attack.PGD_ECAPATDNN.attack = edict()
config.attack.PGD_ECAPATDNN.attack.name = 'PGD'
config.attack.PGD_ECAPATDNN.attack.config = edict()
config.attack.PGD_ECAPATDNN.attack.config.eps = 0.008
config.attack.PGD_ECAPATDNN.attack.config.alpha = 0.0004
config.attack.PGD_ECAPATDNN.attack.config.steps = 20
config.attack.PGD_ECAPATDNN.attack.config.random_start = True
config.attack.PGD_ECAPATDNN.attack.config.until_success = False
config.attack.PGD_ECAPATDNN.attack.config.loss_function = edict()
config.attack.PGD_ECAPATDNN.attack.config.loss_function.name = 'threshold_loss'
config.attack.PGD_ECAPATDNN.attack.config.loss_function.threshold_loss = edict()
config.attack.PGD_ECAPATDNN.attack.config.score_function = edict()
config.attack.PGD_ECAPATDNN.attack.config.score_function.name = 'cosine_similarity_score'
config.attack.PGD_ECAPATDNN.attack.config.score_function.cosine_similarity_score = edict()
config.attack.PGD_ECAPATDNN.attack.config.decision_function = edict()
config.attack.PGD_ECAPATDNN.attack.config.decision_function.name = 'cosine_similarity_decision'
config.attack.PGD_ECAPATDNN.attack.config.decision_function.cosine_similarity_decision = edict()

config.attack.PGD_RawNet3 = edict()
config.attack.PGD_RawNet3.model = edict()
config.attack.PGD_RawNet3.model.name = 'RawNet3'
config.attack.PGD_RawNet3.model.save_path = '/home/wangli/ASGSR/pretrained_models/RawNet3/model.model'
config.attack.PGD_RawNet3.model.config_path = '/home/wangli/ASGSR/voxceleb_trainer/configs/RawNet3_AAM.yaml'
config.attack.PGD_RawNet3.model.threshold = 0.29348
config.attack.PGD_RawNet3.attack = edict()
config.attack.PGD_RawNet3.attack.name = 'PGD'
config.attack.PGD_RawNet3.attack.config = edict()
config.attack.PGD_RawNet3.attack.config.eps = 0.008
config.attack.PGD_RawNet3.attack.config.alpha = 0.0004
config.attack.PGD_RawNet3.attack.config.steps = 20
config.attack.PGD_RawNet3.attack.config.random_start = True
config.attack.PGD_RawNet3.attack.config.until_success = False
config.attack.PGD_RawNet3.attack.config.loss_function = edict()
config.attack.PGD_RawNet3.attack.config.loss_function.name = 'threshold_loss'
config.attack.PGD_RawNet3.attack.config.loss_function.threshold_loss = edict()
config.attack.PGD_RawNet3.attack.config.score_function = edict()
config.attack.PGD_RawNet3.attack.config.score_function.name = 'cosine_similarity_score'
config.attack.PGD_RawNet3.attack.config.score_function.cosine_similarity_score = edict()
config.attack.PGD_RawNet3.attack.config.decision_function = edict()
config.attack.PGD_RawNet3.attack.config.decision_function.name = 'cosine_similarity_decision'
config.attack.PGD_RawNet3.attack.config.decision_function.cosine_similarity_decision = edict()

# ---------------------------------------- dataset --------------------------------------- #
config.data = edict()
config.data.dataset_name = 'VoxCeleb1Verification'

# VoxCeleb1Verification
config.data.VoxCeleb1Verification = edict()
config.data.VoxCeleb1Verification.dataset = edict()
config.data.VoxCeleb1Verification.dataloader = edict()
config.data.VoxCeleb1Verification.dataset.root = '/mntcephfs/data/chenxi/datasets/VoxCeleb/VoxCeleb1/wav'
# config.data.VoxCeleb1Verification.dataset.meta_file = '/mntcephfs/data/chenxi/datasets/VoxCeleb/VoxCeleb1/veri_test.txt'
config.data.VoxCeleb1Verification.dataset.meta_file = '/home/wangli/ASGSR/utils/vox1_uniform_sample_25.txt'
config.data.VoxCeleb1Verification.dataloader.batch_size = 1
config.data.VoxCeleb1Verification.enroll_waveform_index = 0
config.data.VoxCeleb1Verification.eval_waveform_index = 1
config.data.VoxCeleb1Verification.sample_rate_index = 2
config.data.VoxCeleb1Verification.label_index = 3
config.data.VoxCeleb1Verification.enroll_file_index = 4
config.data.VoxCeleb1Verification.eval_file_index = 5  # spk1 for enroll, spk2 for test
config.data.VoxCeleb1Verification.enroll_speaker_index = 6
config.data.VoxCeleb1Verification.eval_speaker_index = 7
